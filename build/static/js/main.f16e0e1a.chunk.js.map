{"version":3,"sources":["components/Wrapper/index.js","components/Captcha/index.js","components/pages/Welcome.js","utils/api.js","components/Canvas/Canvas.js","components/GalleryList/index.js","components/Upload/index.js","components/Canvas/Options.js","components/pages/TestPage2.js","App.js","serviceWorker.js","index.js"],"names":["Wrapper","props","className","Captcha","handleSubscribe","handleSubmit","bind","recaptchaLoaded","verifyCallback","state","isVerified","console","log","this","window","location","href","alert","response","setState","sitekey","render","onloadCallback","onClick","Component","Welcome","history","useHistory","Title","Typography","class","level","type","event","preventDefault","push","axios","get","post","renderImage","action","html2canvas","document","getElementById","then","data","pngFile","toDataURL","a","click","API","image","text1","textPosition1","textColor1","textSize1","text2","textPosition2","textColor2","textSize2","saturation","blur","invert","useState","shareSave","setShareSave","id","style","position","height","width","margin","top","left","right","bottom","backgroundImage","filter","backgroundSize","zIndex","e","color","fontWeight","fontSize","backgroundColor","visibility","marginTop","download","GalleryList","children","GalleryListItem","src","alt","title","Upload","setOptions","uploadedImage","React","useRef","imageUploader","display","flexDirection","alignItems","justifyContent","accept","onChange","file","target","files","reader","FileReader","current","onload","result","readAsDataURL","ref","border","options","padding","borderRadius","value","name","min","max","TestPage2","memes","setMemes","setImage","Canvas","Options","Twitter","res","catch","err","length","map","meme","App","exact","path","component","Boolean","hostname","match","ReactDOM","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.f16e0e1a.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport Recaptcha from 'react-recaptcha';\n\nclass Captcha extends Component {\n  constructor(props) {\n    super(props)\n\n    this.handleSubscribe = this.handleSubmit.bind(this);\n    this.recaptchaLoaded = this.recaptchaLoaded.bind(this);\n    this.verifyCallback = this.verifyCallback.bind(this);\n\n    this.state = {\n      isVerified: false\n    }\n  }\n\n  recaptchaLoaded() {\n    console.log('Captcha is running!');\n  }\n\n  handleSubmit() {\n    if (this.state.isVerified) {\n      window.location.href='/TestPage2'\n    } else {\n      alert('Be gone bot!');\n    }\n  }\n\n  verifyCallback(response) {\n    if (response) {\n      this.setState({\n        isVerified: true\n      })\n    }\n  }\n\n  render() {\n    return (\n        <div className=\"recaptcha\">\n          <Recaptcha\n            sitekey=\"6LdbQaUZAAAAAI9_76pHoxqJ-QSmx9ahpIWHbkQq\"\n            render=\"explicit\"\n            onloadCallback={this.recaptchaLoaded}\n            verifyCallback={this.verifyCallback}\n          />\n        <button className=\"Route\" onClick={this.handleSubscribe}>Verify</button>\n        </div>\n    );\n  }\n}\n\nexport default Captcha;","import React from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Captcah from \"../Captcha\";\nimport { Typography,Button } from 'antd';\n\nfunction Welcome()  {\n    const history = useHistory();\n    const { Title } = Typography;\n\n    const handleClick = event => {\n        event.preventDefault();\n        history.push(\"/testpage2\");\n    }\n\n    return (\n        <div className=\"Wcont\">\n            <Title class=\"h2\" level={2}>Meme myself and I app!</Title>\n            <Title class=\"h3\" level={3}>Create Download Share!</Title>\n            <Button className=\"button\" type=\"primary\" onClick={handleClick}>Get Started</Button>\n            <Captcah />\n        </div>\n    );\n\n    }\n\nexport default Welcome;\n\n","import axios from \"axios\";\n\nexport default {\n  getMemes: function() {\n    return axios.get(\"/api/memes\");\n  },\n\n  postImgur: function() {\n    return axios.post(\"api/imgur\");\n  }\n};","import React, {useState} from 'react';\nimport html2canvas from 'html2canvas';\nimport API from '../../utils/api'\n\nconst renderImage = (action) => {\n    html2canvas(document.getElementById('capture'))\n    .then (data => {\n        let pngFile = data.toDataURL(); \n        if (action === 'save') {\n            let a = document.getElementById('downloader'); // For the user to be able to download result image\n            a.href = pngFile;\n            a.click();\n        } else if (action === 'share') {\n            API.postImgur()\n        }\n\n    })\n}\n\n\nexport default ({image, text1, textPosition1, textColor1, textSize1, text2, textPosition2,textColor2,textSize2, saturation, blur, invert}) => {\n\n    const [shareSave, setShareSave] = useState(\"hidden\")\n\n    return (\n        <div id = \"canvas\" className = \"canvas\" style = {{position: \"relative\", height: \"310px\", width: \"414px\", margin: \"0 auto\"}}>\n            <div id = 'capture' className = \"imageLayer\" style = {{position: \"absolute\", top: 0, left: 0, right: 0, bottom: 0, backgroundImage: `url(${image})`, filter: `saturate(${saturation}) blur(${blur}px) invert(${invert}%)`, backgroundSize: \"cover\", zIndex: \"1\"}} onClick = {e => setShareSave(\"visible\")}>\n            </div>\n                <div className = \"textLayer\" style = {{position: \"absolute\", left: 0, right: 0, top: `${textPosition1}%`, color: `${textColor1}`, fontWeight: \"bolder\", fontSize: `${textSize1}px`, zIndex: \"99\"}}>\n                    {text1}\n                </div>\n                <div className = \"textLayer\" style = {{position: \"absolute\", left: 0, right: 0, top: `${textPosition2}%`, color: `${textColor2}`, fontWeight: \"bolder\", fontSize: `${textSize2}px`, zIndex: \"99\"}}>\n                    {text2}\n                </div>\n            \n        <div id = \"canvasOptions\" style = {{position: \"absolute\", top: 0, bottom: 0, left: 0, right: 0, backgroundColor: \"rgba(0,0,0,0.8)\", visibility: shareSave, zIndex: 3}}>\n            \n            <p style = {{color: \"white\", fontWeight: \"bolder\", marginTop: \"30%\"}} onClick = {e =>setShareSave(\"hidden\")}>X</p>\n            <button onClick = {e => renderImage('share')}>Share</button><button onClick = {e => renderImage('save')}>Save</button>\n            <a id = 'downloader' href = '#canvas' download style = {{ visibility: 'hidden', width: 0, height: 0}}>download</a>\n        </div>\n        </div>\n    )\n} ","import React from \"react\";\n\nexport function GalleryList({children}) {\n  return <ul>{children}</ul>\n}\n\nexport function GalleryListItem(props) {\n  return <img src={props.src} alt={props.title} />\n}\n","import React from \"react\";\n// import ReactDOM from \"react-dom\"\n\nfunction Upload({setOptions}){\n    \n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const uploadedImage = React.useRef(null);\n    const imageUploader = React.useRef(null);\n\n    const handleImageUpload = event => {\n        const [file] = event.target.files;\n        if(file){\n            const reader = new FileReader();\n            const {current} = uploadedImage;\n            current.file = file;\n            reader.onload = (event) => {\n                current.src = event.target.result;\n                setOptions(event.target.result)\n            }\n            reader.readAsDataURL(file);\n        }\n    }\n\n    return(\n        <div\n            style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n            }}\n        >\n            <input\n                type =  \"file\"\n                accept= \"image/*\"\n                onChange={handleImageUpload}\n                ref={imageUploader}\n                style={{\n                    display: \"none\"\n                }}\n            />\n            <div \n            style={{\n                height: \"60px\",\n                width: \"60px\",\n                border: \"2px dashed black\"\n\n            }}\n            // onClick={() => imageUploader.current.click()}\n            >\n\n               \n                <img \n                alt=\"upload location\" \n                ref={uploadedImage}\n                style={{\n                    width: \"100%\",\n                    // height: \"60px\",\n                    position: \"relative\"\n                }} />\n            </div>\n\n            <button onClick={() => imageUploader.current.click()}>\n                    click here\n\n                </button>\n        </div>\n         \n    )\n}\n\nexport default Upload;","import React from 'react';\n\nexport default ({options, setOptions}) => {\n\n    return (\n        <div className = \"Options\" style = {{ margin: '5px auto', width: \"414px\", }}>\n            <div id = 'text1div' style = {{backgroundColor: 'rgba(0,0,0,.4)', padding: '5px', borderRadius: '5px'}}>\n            <input type = 'text' style = {{width: '325px'}} value = {options.text1} onChange = {(e) => setOptions({...options, text1: e.target.value})}></input> <input type=\"color\" id=\"head\" name=\"head\" value={options.textColor1} onChange = {(e) => setOptions({...options, textColor1: e.target.value})}></input>\n            <br /> Size: <input type=\"range\" min=\"12\" max=\"100\" style = {{width: '70%'}}value={options.textSize1} onChange = {(e) => setOptions({...options, textSize1: e.target.value})} />\n            <br /> Position: <input type=\"range\" min=\"0\" max=\"100\" style = {{width: '70%'}}value={options.textPosition1} onChange = {(e) => setOptions({...options, textPosition1: e.target.value})} />\n            </div>\n\n            <div id = 'text2div' style = {{backgroundColor: 'rgba(0,0,0,.4)', padding: '5px', borderRadius: '5px', marginTop: '5px'}}>\n            <input type = 'text' style = {{width: '325px'}} value = {options.text2} onChange = {(e) => setOptions({...options, text2: e.target.value})}></input> <input type=\"color\" id=\"head\" name=\"head\" value={options.textColor2} onChange = {(e) => setOptions({...options, textColor2: e.target.value})}></input>\n            <br /> Size: <input type=\"range\" min=\"12\" max=\"100\" style = {{width: '70%'}}value={options.textSize2} onChange = {(e) => setOptions({...options, textSize2: e.target.value})} />\n            <br /> Position: <input type=\"range\" min=\"0\" max=\"100\" style = {{width: '70%'}}value={options.textPosition2} onChange = {(e) => setOptions({...options, textPosition2: e.target.value})} />\n            </div>\n\n            <div id = 'imagediv' style = {{backgroundColor: 'rgba(0,0,0,.4)', padding: '5px', borderRadius: '5px', marginTop: '5px'}}>\n                <strong>Image Options:</strong>\n                <br /> Saturation: <input type=\"range\" min=\"0\" max=\"4\" style = {{width: '70%'}}value={options.saturation} onChange = {(e) => setOptions({...options, saturation: e.target.value})} />\n                <br /> Blur: <input type=\"range\" min=\"0\" max=\"10\" style = {{width: '70%'}}value={options.blur} onChange = {(e) => setOptions({...options, blur: e.target.value})} />\n                <br /> Invert: <input type=\"range\" min=\"0\" max=\"100\" style = {{width: '70%'}}value={options.invert} onChange = {(e) => setOptions({...options, invert: e.target.value})} />\n            </div>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport Canvas from \"../Canvas/Canvas\";\nimport API from \"../../utils/api\"\nimport {GalleryList, GalleryListItem} from \"../GalleryList\"\nimport Upload from \"../Upload\"\nimport Twitter from \"react-twitter-auth\"\nimport OptionsPage from \"../Canvas/Options\"\n\nfunction TestPage2()  {\n\n    const [memes, setMemes] = useState([])\n    const [options, setOptions] = useState({text1: \"Going on a trip\", textPosition1: 0, textColor1: \"#FFFFFF\", textSize1: 16, text2: \"\", textPosition2: 0, textColor2: \"#FFFFFF\", textSize2: 16, saturation: 1, blur: 0, invert: 0}) \n    const [image, setImage] = useState(\"/images/modenProblems.jpg\")\n  \n\n    const handleMemes = event => {\n        event.preventDefault();\n        console.log(\"Handling Memes\")\n        API.getMemes()\n            .then(res =>setMemes(res.data))\n            .catch(err => console.log(err))\n    }\n    return (\n        <div className=\"App\">\n\n            <h3>Make your own Memos </h3>\n            <Canvas textSize1 = {options.textSize1} textPosition1 = {options.textPosition1} image = {image} text1 = {options.text1} textColor1 = {options.textColor1} textSize2 = {options.textSize2} textPosition2 = {options.textPosition2} text2 = {options.text2} textColor2 = {options.textColor2} />\n            <OptionsPage options = {options} setOptions = {setOptions} /> \n            <button onClick = {Twitter}>Twitter</button>\n            <img id = \"resultImage\" alt = \"result will render here\" />\n            <button onClick={handleMemes}>Load Memes</button>\n        {!memes.length ? ( \n            <h1> No Memes to Display</h1>\n        ) : (\n            <GalleryList>\n                {memes.map(meme => { \n                    return (\n                        <GalleryListItem  \n                            src={meme.image} \n                            title={meme.title} \n                        />) \n                    }) \n                })\n        \n            </GalleryList>\n        )}\n\n        <Upload setOptions = {setImage} />\n        </div>\n    );\n}\n\nexport default TestPage2;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport './App.css';\n\n\n// Components\nimport Wrapper from \"../src/components/Wrapper\";\nimport Welcome from \"../src/components/pages/Welcome\";\nimport TestPage2 from \"../src/components/pages/TestPage2\";\n\nfunction App() {  \n  return (\n    <Router>\n      <div className = \"App\">\n        <Wrapper>\n          <Route exact path=\"/\" component={Welcome} />\n          <Route exact path=\"/testpage2\" component={TestPage2} />\n        </Wrapper>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}